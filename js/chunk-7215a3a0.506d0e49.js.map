{"version":3,"sources":["webpack:///./src/components/MenuContainerContent.vue","webpack:///./src/components/MenuContainerContent.vue?c89e","webpack:///./src/components/MenuContainerContent.vue?37cc","webpack:///./src/components/MenuContainerDesktop.vue","webpack:///./src/components/MenuContainerDesktop.vue?ec96","webpack:///./src/components/MenuContainerDesktop.vue?d9ad","webpack:///./src/components/ButtonToggleColorScheme.vue","webpack:///./src/components/ButtonToggleColorScheme.vue?d391","webpack:///./src/components/ButtonToggleColorScheme.vue?2a01","webpack:///./src/composable/useVersionControl.ts"],"names":["class","render","category","index","key","id","length","focusTargetsId","lastLink","href","name","props","required","type","Array","default","toggleButton","Object","header","title","link","target","rel","categories","aria-labelledby","controlsHeadingId","controls","duration","serviceWorkerWaiting","ButtonNewVersion","components","MenuContainerContent","ButtonToggleColorScheme","TransitionFade","interface","useVersionControl","useId","data-testid","aria-label","label","setColorScheme","isLight","icon","usePrefersColorScheme","renderButtonLabels","colorScheme","buttonLabel","value","changeToDarkMode","changeToLightMode","skipServiceWorkerWaiting","skipping","setSkipWaiting","to","skipWaiting"],"mappings":"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","file":"js/chunk-7215a3a0.506d0e49.js","sourcesContent":["<template>\n  <nav class=\"space-y-2 sm:space-y-4 md:space-y-5\">\n    <div v-for=\"(category, index) in render\" :key=\"index\">\n      <a\n        :id=\"index + 1 === render.length ? focusTargetsId.lastLink : ''\"\n        v-focus-target=\"{\n          query: '#' + focusTargetsId.toggleButton,\n          enable: focusTargetsId.toggleButton && index + 1 === render.length,\n        }\"\n        class=\"link text-2xl sm:text-3xl md:text-4xl block text-primary-700 dark:text-primary-200 font-semibold transform transition-transform duration-75 ease-in hover:translate-x-1\"\n        :href=\"`#${category.name}`\"\n        ><p class=\"first-letter:uppercase\">{{ category.name }}</p></a\n      >\n    </div>\n  </nav>\n</template>\n\n<script lang=\"ts\">\nimport { ref, reactive, defineComponent } from \"vue\"\nimport { Category } from \"@/composable/useDefinitions\"\n\ninterface NavigationFocusTargetsId {\n  lastLink: string\n  toggleButton: string\n}\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Array as () => Category[],\n    },\n    focusTargetsId: {\n      default: () => ({\n        lastLink: \"\",\n        toggleButton: \"\",\n      }),\n      type: Object as () => NavigationFocusTargetsId,\n    },\n  },\n  setup() {\n    return {}\n  },\n})\n</script>\n","\nimport { ref, reactive, defineComponent } from \"vue\"\nimport { Category } from \"@/composable/useDefinitions\"\n\ninterface NavigationFocusTargetsId {\n  lastLink: string\n  toggleButton: string\n}\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Array as () => Category[],\n    },\n    focusTargetsId: {\n      default: () => ({\n        lastLink: \"\",\n        toggleButton: \"\",\n      }),\n      type: Object as () => NavigationFocusTargetsId,\n    },\n  },\n  setup() {\n    return {}\n  },\n})\n","import { render } from \"./MenuContainerContent.vue?vue&type=template&id=3f610fff\"\nimport script from \"./MenuContainerContent.vue?vue&type=script&lang=ts\"\nexport * from \"./MenuContainerContent.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <header class=\"mb-8\">\n      <h1\n        class=\"font-semibold text-5xl text-black dark:text-gray-200 first-letter:uppercase\"\n      >\n        {{ header.title }}\n      </h1>\n      <a\n        class=\"link text-2xl text-primary-700 dark:text-primary-200 underline font-small-caps\"\n        :href=\"header.link.href\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        >{{ header.link.title }}</a\n      >\n    </header>\n    <MenuContainerContent :render=\"render.categories\" />\n  </div>\n  <section class=\"flex space-x-2\" :aria-labelledby=\"controlsHeadingId\">\n    <h2 :id=\"controlsHeadingId\" class=\"sr-only\">{{ controls.title }}</h2>\n    <button-toggle-color-scheme :render=\"render\" />\n    <transition-fade duration=\"duration-600\">\n      <button-new-version v-if=\"serviceWorkerWaiting\" :render=\"render\" />\n    </transition-fade>\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ref,\n  reactive,\n  defineComponent,\n  defineAsyncComponent,\n  computed,\n} from \"vue\"\nimport MenuContainerContent from \"./MenuContainerContent.vue\"\nimport ButtonToggleColorScheme from \"./ButtonToggleColorScheme.vue\"\nconst ButtonNewVersion = defineAsyncComponent(() =>\n  import(\"./ButtonNewVersion.vue\"),\n)\nimport { Render } from \"@/composable/useDefinitions\"\nimport { useVersionControl } from \"@/composable/useVersionControl\"\nimport TransitionFade from \"./TransitionFade.vue\"\nimport { useId } from \"@/composable/useId\"\n\nexport default defineComponent({\n  components: {\n    MenuContainerContent,\n    ButtonToggleColorScheme,\n    ButtonNewVersion,\n    TransitionFade,\n  },\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const header = computed(() => props.render.interface.header)\n    const controls = computed(() => props.render.interface.controls)\n\n    const { serviceWorkerWaiting } = useVersionControl()\n    const controlsHeadingId = useId().id\n\n    return { header, controls, serviceWorkerWaiting, controlsHeadingId }\n  },\n})\n</script>\n","\nimport {\n  ref,\n  reactive,\n  defineComponent,\n  defineAsyncComponent,\n  computed,\n} from \"vue\"\nimport MenuContainerContent from \"./MenuContainerContent.vue\"\nimport ButtonToggleColorScheme from \"./ButtonToggleColorScheme.vue\"\nconst ButtonNewVersion = defineAsyncComponent(() =>\n  import(\"./ButtonNewVersion.vue\"),\n)\nimport { Render } from \"@/composable/useDefinitions\"\nimport { useVersionControl } from \"@/composable/useVersionControl\"\nimport TransitionFade from \"./TransitionFade.vue\"\nimport { useId } from \"@/composable/useId\"\n\nexport default defineComponent({\n  components: {\n    MenuContainerContent,\n    ButtonToggleColorScheme,\n    ButtonNewVersion,\n    TransitionFade,\n  },\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const header = computed(() => props.render.interface.header)\n    const controls = computed(() => props.render.interface.controls)\n\n    const { serviceWorkerWaiting } = useVersionControl()\n    const controlsHeadingId = useId().id\n\n    return { header, controls, serviceWorkerWaiting, controlsHeadingId }\n  },\n})\n","import { render } from \"./MenuContainerDesktop.vue?vue&type=template&id=2035eddf\"\nimport script from \"./MenuContainerDesktop.vue?vue&type=script&lang=ts\"\nexport * from \"./MenuContainerDesktop.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <button\n    class=\"button button-primary p-3 sm:p-4 mr-1 sm:mr-3\"\n    data-testid=\"toggle-color-scheme\"\n    :aria-label=\"label\"\n    @click=\"setColorScheme(!isLight)\"\n  >\n    <base-icon class=\"h-5 text-white\" :icon=\"isLight ? 'sun' : 'moon'\" />\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { ref, reactive, defineComponent, computed } from \"vue\"\nimport { usePrefersColorScheme } from \"@/composable/usePrefersColorScheme\"\nimport { Render } from \"@/composable/useDefinitions\"\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const { isLight, setColorScheme } = usePrefersColorScheme()\n    const renderButtonLabels = computed(\n      () => props.render.interface.controls.colorScheme.buttonLabel,\n    )\n    const label = computed(() =>\n      isLight.value\n        ? renderButtonLabels.value.changeToDarkMode\n        : renderButtonLabels.value.changeToLightMode,\n    )\n\n    return { isLight, setColorScheme, label }\n  },\n})\n</script>\n","\nimport { ref, reactive, defineComponent, computed } from \"vue\"\nimport { usePrefersColorScheme } from \"@/composable/usePrefersColorScheme\"\nimport { Render } from \"@/composable/useDefinitions\"\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const { isLight, setColorScheme } = usePrefersColorScheme()\n    const renderButtonLabels = computed(\n      () => props.render.interface.controls.colorScheme.buttonLabel,\n    )\n    const label = computed(() =>\n      isLight.value\n        ? renderButtonLabels.value.changeToDarkMode\n        : renderButtonLabels.value.changeToLightMode,\n    )\n\n    return { isLight, setColorScheme, label }\n  },\n})\n","import { render } from \"./ButtonToggleColorScheme.vue?vue&type=template&id=8ff100aa\"\nimport script from \"./ButtonToggleColorScheme.vue?vue&type=script&lang=ts\"\nexport * from \"./ButtonToggleColorScheme.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { computed, ref, readonly } from \"vue\"\n\ntype SkipWaiting = () => Promise<void>\nconst skipServiceWorkerWaiting = ref<SkipWaiting>()\nconst skipping = ref(false)\n \nexport const useVersionControl = () => {\n  const setSkipWaiting = (to?: SkipWaiting) => {\n    skipServiceWorkerWaiting.value = to\n  }\n  const serviceWorkerWaiting = computed(()=> !!skipServiceWorkerWaiting.value)\n  const skipWaiting = () => {\n    skipping.value = true\n    return skipServiceWorkerWaiting.value?.()\n  }\n\n  return {\n    setSkipWaiting,\n    skipWaiting,\n    serviceWorkerWaiting: serviceWorkerWaiting,\n    skipping: readonly(skipping)\n  }\n}\n"],"sourceRoot":""}