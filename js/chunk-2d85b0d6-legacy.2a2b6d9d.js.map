{"version":3,"sources":["webpack:///./src/components/MenuContainerContent.vue","webpack:///./src/components/MenuContainerContent.vue?c89e","webpack:///./src/components/MenuContainerContent.vue?37cc","webpack:///./src/components/MenuContainerMobile.vue","webpack:///./src/components/MenuContainerMobile.vue?39d0","webpack:///./src/components/MenuContainerMobile.vue?af33","webpack:///./src/components/ButtonToggleColorScheme.vue","webpack:///./src/components/ButtonToggleColorScheme.vue?d391","webpack:///./src/components/ButtonToggleColorScheme.vue?2a01","webpack:///./src/composable/useVersionControl.ts"],"names":["class","render","category","index","key","id","length","focusTargetsId","lastLink","href","name","props","required","type","Array","default","toggleButton","Object","setup","header","title","link","target","rel","aria-labelledby","controlsHeadingId","controls","duration","serviceWorkerWaiting","tooltip-right","role","mobileShowContent","navigationIds","data-testid","icon","appear","appear-active-class","appear-from-class","appear-to-class","enter-active-class","enter-from-class","enter-to-class","leave-active-class","leave-from-class","leave-to-class","categories","focus-targets-id","ButtonNewVersion","components","MenuContainerContent","ButtonToggleColorScheme","value","interface","useVersionControl","useId","aria-label","label","setColorScheme","isLight","usePrefersColorScheme","renderButtonLabels","colorScheme","buttonLabel","changeToDarkMode","changeToLightMode","skipServiceWorkerWaiting","skipping","setSkipWaiting","to","skipWaiting"],"mappings":"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","file":"js/chunk-2d85b0d6-legacy.2a2b6d9d.js","sourcesContent":["<template>\n  <nav class=\"space-y-2 sm:space-y-4 md:space-y-5\">\n    <div v-for=\"(category, index) in render\" :key=\"index\">\n      <a\n        :id=\"index + 1 === render.length ? focusTargetsId.lastLink : ''\"\n        v-focus-target=\"{\n          query: '#' + focusTargetsId.toggleButton,\n          enable: focusTargetsId.toggleButton && index + 1 === render.length,\n        }\"\n        class=\"link text-2xl sm:text-3xl md:text-4xl block text-primary-700 dark:text-primary-200 font-semibold transform transition-transform duration-75 ease-in hover:translate-x-1\"\n        :href=\"`#${category.name}`\"\n        ><p class=\"first-letter:uppercase\">{{ category.name }}</p></a\n      >\n    </div>\n  </nav>\n</template>\n\n<script lang=\"ts\">\nimport { ref, reactive, defineComponent } from \"vue\"\nimport { Category } from \"@/composable/useDefinitions\"\n\ninterface NavigationFocusTargetsId {\n  lastLink: string\n  toggleButton: string\n}\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Array as () => Category[],\n    },\n    focusTargetsId: {\n      default: () => ({\n        lastLink: \"\",\n        toggleButton: \"\",\n      }),\n      type: Object as () => NavigationFocusTargetsId,\n    },\n  },\n  setup() {\n    return {}\n  },\n})\n</script>\n","\nimport { ref, reactive, defineComponent } from \"vue\"\nimport { Category } from \"@/composable/useDefinitions\"\n\ninterface NavigationFocusTargetsId {\n  lastLink: string\n  toggleButton: string\n}\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Array as () => Category[],\n    },\n    focusTargetsId: {\n      default: () => ({\n        lastLink: \"\",\n        toggleButton: \"\",\n      }),\n      type: Object as () => NavigationFocusTargetsId,\n    },\n  },\n  setup() {\n    return {}\n  },\n})\n","import { render } from \"./MenuContainerContent.vue?vue&type=template&id=3f610fff\"\nimport script from \"./MenuContainerContent.vue?vue&type=script&lang=ts\"\nexport * from \"./MenuContainerContent.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"flex-1 order-1 flex justify-between z-10 items-center\">\n    <header>\n      <h1 class=\"sr-only\">\n        {{ header.title }}\n      </h1>\n      <a\n        class=\"link text-2xl sm:text-3xl text-primary-700 dark:text-primary-200 underline font-small-caps\"\n        :href=\"header.link.href\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        >{{ header.link.title }}</a\n      >\n    </header>\n    <section\n      class=\"flex justify-end space-x-2\"\n      :aria-labelledby=\"controlsHeadingId\"\n    >\n      <h2 :id=\"controlsHeadingId\" class=\"sr-only\">{{ controls.title }}</h2>\n      <transition-fade duration=\"duration-600\">\n        <button-new-version\n          v-if=\"serviceWorkerWaiting\"\n          tooltip-right\n          :render=\"render\"\n        />\n      </transition-fade>\n      <button-toggle-color-scheme :render=\"render\" />\n      <div :role=\"mobileShowContent ? '' : 'navigation'\">\n        <button\n          :id=\"navigationIds.toggleButton\"\n          v-focus-target:back=\"{\n            query: '#' + navigationIds.lastLink,\n            enable: mobileShowContent,\n          }\"\n          class=\"button button-primary p-3 sm:p-4 mr-1 sm:ml-3\"\n          data-testid=\"toggle\"\n          @click=\"mobileShowContent = !mobileShowContent\"\n        >\n          <base-icon\n            class=\"h-5 w-5 text-white\"\n            :icon=\"mobileShowContent ? 'close' : 'menu'\"\n          />\n        </button>\n      </div>\n    </section>\n  </div>\n  <transition\n    appear\n    appear-active-class=\"transform transition-transform duration-200 ease-in\"\n    appear-from-class=\"translate-y-full\"\n    appear-to-class=\"translate-y-0\"\n    enter-active-class=\"transform transition-all duration-200 ease-in\"\n    enter-from-class=\"translate-y-full opacity-0\"\n    enter-to-class=\"translate-y-0 opacity-100\"\n    leave-active-class=\"transform transition-all duration-200 ease-in\"\n    leave-from-class=\"translate-y-0\"\n    leave-to-class=\"translate-y-full\"\n  >\n    <div\n      v-show=\"mobileShowContent\"\n      class=\"transform transition-all duration-200 ease-in flex flex-col p-2 sm:p-4 fixed inset-x-0 bottom-0 shadow-center-lg bg-gray-200 dark:bg-gray-800 rounded-t-xl\"\n    >\n      <MenuContainerContent\n        class=\"mb-14 sm:mb-20 mt-4 mr-5 sm:mr-7 text-right\"\n        :render=\"render.categories\"\n        :focus-targets-id=\"navigationIds\"\n      />\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ref,\n  defineComponent,\n  computed,\n  defineAsyncComponent,\n  reactive,\n} from \"vue\"\nimport MenuContainerContent from \"./MenuContainerContent.vue\"\nimport ButtonToggleColorScheme from \"./ButtonToggleColorScheme.vue\"\nconst ButtonNewVersion = defineAsyncComponent(() =>\n  import(\"./ButtonNewVersion.vue\"),\n)\nimport { Render } from \"@/composable/useDefinitions\"\nimport { onBeforeRouteUpdate } from \"vue-router\"\nimport { useVersionControl } from \"@/composable/useVersionControl\"\nimport { useId } from \"@/composable/useId\"\n\nexport default defineComponent({\n  components: {\n    MenuContainerContent,\n    ButtonToggleColorScheme,\n    ButtonNewVersion,\n  },\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const mobileShowContent = ref(true)\n    onBeforeRouteUpdate(() => {\n      mobileShowContent.value = false\n    })\n\n    const header = computed(() => props.render.interface.header)\n    const controls = computed(() => props.render.interface.controls)\n\n    const { serviceWorkerWaiting } = useVersionControl()\n\n    const navigationIds = reactive({\n      lastLink: useId().id,\n      toggleButton: useId().id,\n    })\n\n    const controlsHeadingId = useId().id\n    return {\n      mobileShowContent,\n      header,\n      navigationIds,\n      controls,\n      serviceWorkerWaiting,\n      controlsHeadingId,\n    }\n  },\n})\n</script>\n","\nimport {\n  ref,\n  defineComponent,\n  computed,\n  defineAsyncComponent,\n  reactive,\n} from \"vue\"\nimport MenuContainerContent from \"./MenuContainerContent.vue\"\nimport ButtonToggleColorScheme from \"./ButtonToggleColorScheme.vue\"\nconst ButtonNewVersion = defineAsyncComponent(() =>\n  import(\"./ButtonNewVersion.vue\"),\n)\nimport { Render } from \"@/composable/useDefinitions\"\nimport { onBeforeRouteUpdate } from \"vue-router\"\nimport { useVersionControl } from \"@/composable/useVersionControl\"\nimport { useId } from \"@/composable/useId\"\n\nexport default defineComponent({\n  components: {\n    MenuContainerContent,\n    ButtonToggleColorScheme,\n    ButtonNewVersion,\n  },\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const mobileShowContent = ref(true)\n    onBeforeRouteUpdate(() => {\n      mobileShowContent.value = false\n    })\n\n    const header = computed(() => props.render.interface.header)\n    const controls = computed(() => props.render.interface.controls)\n\n    const { serviceWorkerWaiting } = useVersionControl()\n\n    const navigationIds = reactive({\n      lastLink: useId().id,\n      toggleButton: useId().id,\n    })\n\n    const controlsHeadingId = useId().id\n    return {\n      mobileShowContent,\n      header,\n      navigationIds,\n      controls,\n      serviceWorkerWaiting,\n      controlsHeadingId,\n    }\n  },\n})\n","import { render } from \"./MenuContainerMobile.vue?vue&type=template&id=18340d84\"\nimport script from \"./MenuContainerMobile.vue?vue&type=script&lang=ts\"\nexport * from \"./MenuContainerMobile.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <button\n    class=\"button button-primary p-3 sm:p-4 mr-1 sm:mr-3\"\n    data-testid=\"toggle-color-scheme\"\n    :aria-label=\"label\"\n    @click=\"setColorScheme(!isLight)\"\n  >\n    <base-icon class=\"h-5 text-white\" :icon=\"isLight ? 'sun' : 'moon'\" />\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { ref, reactive, defineComponent, computed } from \"vue\"\nimport { usePrefersColorScheme } from \"@/composable/usePrefersColorScheme\"\nimport { Render } from \"@/composable/useDefinitions\"\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const { isLight, setColorScheme } = usePrefersColorScheme()\n    const renderButtonLabels = computed(\n      () => props.render.interface.header.colorScheme.buttonLabel\n    )\n    const label = computed(() =>\n      isLight.value\n        ? renderButtonLabels.value.changeToDarkMode\n        : renderButtonLabels.value.changeToLightMode\n    )\n\n    return { isLight, setColorScheme, label }\n  },\n})\n</script>\n","\nimport { ref, reactive, defineComponent, computed } from \"vue\"\nimport { usePrefersColorScheme } from \"@/composable/usePrefersColorScheme\"\nimport { Render } from \"@/composable/useDefinitions\"\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const { isLight, setColorScheme } = usePrefersColorScheme()\n    const renderButtonLabels = computed(\n      () => props.render.interface.header.colorScheme.buttonLabel\n    )\n    const label = computed(() =>\n      isLight.value\n        ? renderButtonLabels.value.changeToDarkMode\n        : renderButtonLabels.value.changeToLightMode\n    )\n\n    return { isLight, setColorScheme, label }\n  },\n})\n","import { render } from \"./ButtonToggleColorScheme.vue?vue&type=template&id=19f5c73a\"\nimport script from \"./ButtonToggleColorScheme.vue?vue&type=script&lang=ts\"\nexport * from \"./ButtonToggleColorScheme.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { computed, ref, readonly } from \"vue\"\n\ntype SkipWaiting = () => Promise<void>\nconst skipServiceWorkerWaiting = ref<SkipWaiting>()\nconst skipping = ref(false)\n \nexport const useVersionControl = () => {\n  const setSkipWaiting = (to?: SkipWaiting) => {\n    skipServiceWorkerWaiting.value = to\n  }\n  const serviceWorkerWaiting = computed(()=> !!skipServiceWorkerWaiting.value)\n  const skipWaiting = () => {\n    skipping.value = true\n    return skipServiceWorkerWaiting.value?.()\n  }\n\n  return {\n    setSkipWaiting,\n    skipWaiting,\n    serviceWorkerWaiting: serviceWorkerWaiting,\n    skipping: readonly(skipping)\n  }\n}\n"],"sourceRoot":""}