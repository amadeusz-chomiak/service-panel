{"version":3,"sources":["webpack:///./src/components/MenuContainerContent.vue","webpack:///./src/components/MenuContainerContent.vue?c89e","webpack:///./src/components/MenuContainerContent.vue?37cc","webpack:///./src/components/MenuContainerMobile.vue","webpack:///./src/components/MenuContainerMobile.vue?39d0","webpack:///./src/components/MenuContainerMobile.vue?af33","webpack:///./src/components/ButtonToggleColorScheme.vue","webpack:///./src/components/ButtonToggleColorScheme.vue?d391","webpack:///./src/components/ButtonToggleColorScheme.vue?2a01","webpack:///./src/composable/useVersionControl.ts"],"names":["class","render","category","index","key","href","name","props","required","type","Array","setup","appear","appear-active-class","appear-from-class","appear-to-class","enter-active-class","enter-from-class","enter-to-class","leave-active-class","leave-from-class","leave-to-class","categories","mobileShowContent","header","link","target","rel","title","duration","serviceWorkerWaiting","tooltip-right","data-testid","icon","ButtonNewVersion","components","MenuContainerContent","ButtonToggleColorScheme","Object","value","interface","useVersionControl","aria-label","label","setColorScheme","isLight","usePrefersColorScheme","renderButtonLabels","colorScheme","buttonLabel","changeToDarkMode","changeToLightMode","skipServiceWorkerWaiting","skipping","setSkipWaiting","to","skipWaiting"],"mappings":"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","file":"js/chunk-2d85b0d6-legacy.2698786e.js","sourcesContent":["<template>\n  <nav class=\"space-y-2 sm:space-y-4 md:space-y-5\">\n    <div v-for=\"(category, index) in render\" :key=\"index\">\n      <a\n        class=\"link text-2xl sm:text-3xl md:text-4xl block text-primary-700 dark:text-primary-200 font-semibold transform transition-transform duration-75 ease-in hover:translate-x-1\"\n        :href=\"`#${category.name}`\"\n        ><p class=\"first-letter:uppercase\">{{ category.name }}</p></a\n      >\n    </div>\n  </nav>\n</template>\n\n<script lang=\"ts\">\nimport { ref, reactive, defineComponent } from \"vue\"\nimport { Category } from \"@/composable/useDefinitions\"\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Array as () => Category[],\n    },\n  },\n  setup() {\n    return {}\n  },\n})\n</script>\n","\nimport { ref, reactive, defineComponent } from \"vue\"\nimport { Category } from \"@/composable/useDefinitions\"\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Array as () => Category[],\n    },\n  },\n  setup() {\n    return {}\n  },\n})\n","import { render } from \"./MenuContainerContent.vue?vue&type=template&id=f99303ea\"\nimport script from \"./MenuContainerContent.vue?vue&type=script&lang=ts\"\nexport * from \"./MenuContainerContent.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <transition\n    appear\n    appear-active-class=\"transform transition-transform duration-200 ease-in\"\n    appear-from-class=\"translate-y-full\"\n    appear-to-class=\"translate-y-0\"\n    enter-active-class=\"transform transition-all duration-200 ease-in\"\n    enter-from-class=\"translate-y-full opacity-0\"\n    enter-to-class=\"translate-y-0 opacity-100\"\n    leave-active-class=\"transform transition-all duration-200 ease-in\"\n    leave-from-class=\"translate-y-0\"\n    leave-to-class=\"translate-y-full\"\n  >\n    <div\n      v-show=\"mobileShowContent\"\n      class=\"transform transition-all duration-200 ease-in flex flex-col p-2 sm:p-4 fixed inset-x-0 bottom-0 shadow-center-lg bg-gray-200 dark:bg-gray-800 rounded-t-xl\"\n    >\n      <MenuContainerContent\n        class=\"mb-14 sm:mb-20 mt-4 mr-5 sm:mr-7 text-right\"\n        :render=\"render.categories\"\n      />\n    </div>\n  </transition>\n  <div class=\"flex-1 flex justify-between z-10 items-center\">\n    <a\n      class=\"link text-2xl sm:text-3xl text-primary-700 dark:text-primary-200 underline font-small-caps\"\n      :href=\"header.link.href\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      >{{ header.link.title }}</a\n    >\n    <div class=\"flex justify-end space-x-2\">\n      <transition-fade duration=\"duration-600\">\n        <button-new-version\n          v-if=\"serviceWorkerWaiting\"\n          tooltip-right\n          :render=\"render\"\n        />\n      </transition-fade>\n      <button-toggle-color-scheme :render=\"render\" />\n      <button\n        class=\"button button-primary p-3 sm:p-4 mr-1 sm:ml-3\"\n        data-testid=\"toggle\"\n        @click=\"mobileShowContent = !mobileShowContent\"\n      >\n        <base-icon\n          class=\"h-5 w-5 text-white\"\n          :icon=\"mobileShowContent ? 'close' : 'menu'\"\n        />\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent, computed, defineAsyncComponent } from \"vue\"\nimport MenuContainerContent from \"./MenuContainerContent.vue\"\nimport ButtonToggleColorScheme from \"./ButtonToggleColorScheme.vue\"\nconst ButtonNewVersion = defineAsyncComponent(() =>\n  import(\"./ButtonNewVersion.vue\"),\n)\nimport { Render } from \"@/composable/useDefinitions\"\nimport { onBeforeRouteUpdate } from \"vue-router\"\nimport { useVersionControl } from \"@/composable/useVersionControl\"\n\nexport default defineComponent({\n  components: {\n    MenuContainerContent,\n    ButtonToggleColorScheme,\n    ButtonNewVersion,\n  },\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const mobileShowContent = ref(true)\n    onBeforeRouteUpdate(() => {\n      mobileShowContent.value = false\n    })\n\n    const header = computed(() => props.render.interface.header)\n\n    const { serviceWorkerWaiting } = useVersionControl()\n\n    return { mobileShowContent, header, serviceWorkerWaiting }\n  },\n})\n</script>\n","\nimport { ref, defineComponent, computed, defineAsyncComponent } from \"vue\"\nimport MenuContainerContent from \"./MenuContainerContent.vue\"\nimport ButtonToggleColorScheme from \"./ButtonToggleColorScheme.vue\"\nconst ButtonNewVersion = defineAsyncComponent(() =>\n  import(\"./ButtonNewVersion.vue\"),\n)\nimport { Render } from \"@/composable/useDefinitions\"\nimport { onBeforeRouteUpdate } from \"vue-router\"\nimport { useVersionControl } from \"@/composable/useVersionControl\"\n\nexport default defineComponent({\n  components: {\n    MenuContainerContent,\n    ButtonToggleColorScheme,\n    ButtonNewVersion,\n  },\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const mobileShowContent = ref(true)\n    onBeforeRouteUpdate(() => {\n      mobileShowContent.value = false\n    })\n\n    const header = computed(() => props.render.interface.header)\n\n    const { serviceWorkerWaiting } = useVersionControl()\n\n    return { mobileShowContent, header, serviceWorkerWaiting }\n  },\n})\n","import { render } from \"./MenuContainerMobile.vue?vue&type=template&id=01dd9a8e\"\nimport script from \"./MenuContainerMobile.vue?vue&type=script&lang=ts\"\nexport * from \"./MenuContainerMobile.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <button\n    class=\"button button-primary p-3 sm:p-4 mr-1 sm:mr-3\"\n    data-testid=\"toggle-color-scheme\"\n    :aria-label=\"label\"\n    @click=\"setColorScheme(!isLight)\"\n  >\n    <base-icon class=\"h-5 text-white\" :icon=\"isLight ? 'sun' : 'moon'\" />\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { ref, reactive, defineComponent, computed } from \"vue\"\nimport { usePrefersColorScheme } from \"@/composable/usePrefersColorScheme\"\nimport { Render } from \"@/composable/useDefinitions\"\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const { isLight, setColorScheme } = usePrefersColorScheme()\n    const renderButtonLabels = computed(\n      () => props.render.interface.header.colorScheme.buttonLabel\n    )\n    const label = computed(() =>\n      isLight.value\n        ? renderButtonLabels.value.changeToDarkMode\n        : renderButtonLabels.value.changeToLightMode\n    )\n\n    return { isLight, setColorScheme, label }\n  },\n})\n</script>\n","\nimport { ref, reactive, defineComponent, computed } from \"vue\"\nimport { usePrefersColorScheme } from \"@/composable/usePrefersColorScheme\"\nimport { Render } from \"@/composable/useDefinitions\"\n\nexport default defineComponent({\n  props: {\n    render: {\n      required: true,\n      type: Object as () => Render,\n    },\n  },\n  setup(props) {\n    const { isLight, setColorScheme } = usePrefersColorScheme()\n    const renderButtonLabels = computed(\n      () => props.render.interface.header.colorScheme.buttonLabel\n    )\n    const label = computed(() =>\n      isLight.value\n        ? renderButtonLabels.value.changeToDarkMode\n        : renderButtonLabels.value.changeToLightMode\n    )\n\n    return { isLight, setColorScheme, label }\n  },\n})\n","import { render } from \"./ButtonToggleColorScheme.vue?vue&type=template&id=19f5c73a\"\nimport script from \"./ButtonToggleColorScheme.vue?vue&type=script&lang=ts\"\nexport * from \"./ButtonToggleColorScheme.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { computed, ref, readonly } from \"vue\"\n\ntype SkipWaiting = () => Promise<void>\nconst skipServiceWorkerWaiting = ref<SkipWaiting>()\nconst skipping = ref(false)\n \nexport const useVersionControl = () => {\n  const setSkipWaiting = (to?: SkipWaiting) => {\n    skipServiceWorkerWaiting.value = to\n  }\n  const serviceWorkerWaiting = computed(()=> !!skipServiceWorkerWaiting.value)\n  const skipWaiting = () => {\n    skipping.value = true\n    return skipServiceWorkerWaiting.value?.()\n  }\n\n  return {\n    setSkipWaiting,\n    skipWaiting,\n    serviceWorkerWaiting: serviceWorkerWaiting,\n    skipping: readonly(skipping)\n  }\n}\n"],"sourceRoot":""}